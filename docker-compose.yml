services:
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile.nginx
    container_name: nginx.test
    ports:
      - "80:80"
    depends_on:
      - backend

  backend:
    build: ./backend
    container_name: backend.test
    ports:
      - "8001:8001"
    env_file: .env.test
    environment:
      - DATABASE_URL=postgresql://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:${PG_PORT}/${PG_DB}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:17-alpine
    container_name: postgres.test
    env_file: .env.test
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin.test
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5051:80"
    depends_on:
      - db

volumes:
  postgres_data:  